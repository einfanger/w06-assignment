/* CSS - Name: "positionstyles.css" */
/* Activity 1 styles */
.content1 {display: grid;
  grid-template-columns: 1fr 1fr;
  justify-items: center;
  gap: 20px;
  /* This is the parent of the activity 1 boxes. */

}
.red1 { 
  width: 100%; 
  height: 100px; 
  background-color: red; 
  grid-column: 1/3;

} 
.green1 {
  width: 200px; 
  height: 200px; 
  background-color: green; 

} 
.yellow1 {
  width: 200px; 
  height: 200px; 
  background-color: gold; 
} 
.blue1 {
  width: 100%; 
  height: 100px; 
  background-color: blue;
  grid-column: 1/3; 
} 
/* Activity 2 styles */ 
.content2 {
  position: relative;
  width: 300px;
  height: 300px;
}

.red2, .green2, .yellow2, .blue2 {
  width: 100px; 
  height: 100px; 
  position: absolute;
}

.red2 {
  background-color: red; 
  top: 0; 
  left: 0; 
}

.green2 {
  background-color: green; 
  top: 30px;
  left: 30px;
}

.yellow2 {
  background-color: gold; 
  top: 60px; 
  left: 60px; 
}

.blue2 {
  background-color: blue; 
  top: 90px; 
  left: 90px; 
}

  /* Activity 3 styles */
.content3 {
  display: grid; /* Using grid layout for structured arrangement */
  grid-template-columns: 1fr auto 1fr; 
  grid-template-rows: 1fr 1fr 1fr;
  width: 300px;
  height: 300px;
  gap: 0;
}

.red3 {
  background-color: red; 
  grid-column: 1 / 4; 
  grid-row: 1; 
}

.green3 {
  background-color: green; 
  grid-column: 1; /* First column */
  grid-row: 2; /* Second row */
}

.white-rect {
  background-color: white;
  grid-column: 2; /* Middle narrow column */
  grid-row: 2; /* Second row */
  width: 10px; /* Adjust width */
  height: 100%; /* Full height of the row */
}

.yellow3 {
  background-color: gold; 
  grid-column: 3; /* Third column */
  grid-row: 2; /* Second row */
}

.blue3 {
  background-color: blue; 
  grid-column: 1 / 4; /* Spans across all columns */
  grid-row: 3; /* Third row */
}

/* Activity 4 styles */ 
.content4 {
  display: flex;
  height: 400px;
  width: 400px;
}

.red4 {
  width: 50%; 
  height: 100%;
  background-color: red; 
} 

.right-column {
  display: flex;
  flex-direction: column;
  width: 50%;
}

.green4, .yellow4, .blue4 {
  height: 33.33%;
  width: 100%;
}

.green4 {
  background-color: green; 
} 

.yellow4 {
  background-color: gold; 
} 

.blue4 {
  background-color: blue; 
}

/* Activity 5 styles */ 
/* Activity 4 styles */ 
.content4 {
  display: grid;
  grid-template-rows: 1fr 2fr 1fr;
  grid-template-columns: 1fr 2fr;
  height: 400px;
  width: 600px;
}

.red4 {
  grid-column: 1 / 3;
  background-color: red; 
}

.green4 {
  background-color: green;
  padding: 10px;
}

.yellow4 {
  background-color: yellow;
  padding: 10px;
}

.blue4 {
  grid-column: 1 / 3;
  background-color: blue;
}

/* Activity 6 styles */ 
.content6 {
  /* This is the parent of the activity 6 boxes. */
}
.red6 {
  width: 100px; 
  height: 100px; 
  background-color: red; 
} 
.green6 {
  width: 100px; 
  height: 100px; 
  background-color: green; 
} 
.yellow6 {
  width: 100px; 
  height: 100px; 
  background-color: gold; 
} 
.blue6 {
  width: 100px; 
  height: 100px; 
  background-color: blue; 
} 


/* Do not make any changes below here */
.activity {
  width: 70%; 
  margin: 20px auto; 
  font-family: Arial, sans-serif; 
  border: 1px solid black; 
  padding: 10px; 
  clear:both; 
  overflow: auto;
} 

.hint {
  border: 1px solid grey;
  background: #e0e0e0;
  padding: .5em;
  position: relative;
  margin: 1em 0;
}
.hint h3 {
  margin: 0;
}
.hint:hover {
  background: #d0d0d0;
}
.hint > div {
  display: none;
}

.hint input[type=checkbox] {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
  z-index: 1;
  cursor: pointer;
}

.hint input[type=checkbox]:checked ~ div {
  display: block;
}

.hint i {
  position: absolute;
  transform: translate(-6px, 0);
  margin-top: 16px;
  right: 10px;
  top: -3px;
}
.hint i:before, .hint i:after {
  content: "";
  position: absolute;
  background-color: black;
  width: 3px;
  height: 9px;
}
.hint i:before {
  transform: translate(2px, 0) rotate(45deg);
}
.hint i:after {
  transform: translate(-2px, 0) rotate(-45deg);
}

.hint input[type=checkbox]:checked ~ i:before {
  transform: translate(-2px, 0) rotate(45deg);
}
.hint input[type=checkbox]:checked ~ i:after {
  transform: translate(2px, 0) rotate(-45deg);
}
.hint a {
  position: relative;
  z-index: 1;
}